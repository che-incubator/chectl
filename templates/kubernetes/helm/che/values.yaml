#
# Copyright (c) 2012-2017 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

# the following section is for secure registries. when uncommented, a pull secret will be created
#registry:
#  host: my-secure-private-registry.com
#  username: myUser
#  password: myPass

cheWorkspaceHttpProxy: ""
cheWorkspaceHttpsProxy: ""
cheWorkspaceNoProxy: ""
cheImage: eclipse/che-server:nightly
cheImagePullPolicy: Always
cheKeycloakRealm: "che"
cheKeycloakClientId: "che-public"
#customOidcUsernameClaim: ""
#customOidcProvider: ""
#workspaceDefaultRamRequest: ""
#workspaceDefaultRamLimit: ""
#workspaceSidecarDefaultRamLimit: ""

global:
  cheNamespace: ""
  multiuser: false
  #  This value can be passed if custom Oidc provider is used, and there is no need to deploy keycloak in multiuser mode
  #  default (if empty) is true
  #cheDedicatedKeycloak: false
  ingressDomain: 192.168.99.100.nip.io
  # See --annotations-prefix flag (https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/cli-arguments.md)
  ingressAnnotationsPrefix: "nginx."
  # options: default-host, single-host, multi-host
  serverStrategy: multi-host
  tls:
    enabled: false
    useCertManager: true
    useStaging: true
    secretName: che-tls
  gitHubClientID: ""
  gitHubClientSecret: ""
  pvcClaim: "1Gi"
  cheWorkspacesNamespace: ""
  # Service account name that will be mounted to workspaces pods
  # Note that:
  # if `cheWorkspacesNamespace` is configured then service account with configured name will be created by helm chart during deploying Che
  # if `cheWorkspacesNamespace` is empty then Che Server creates new namespace for each workspace and ensures that configured SA exists there
  cheWorkspaceServiceAccount: "che-workspace"
  workspaceIdleTimeout: "-1"
  log:
    loggerConfig: ""
    appenderName: "plaintext"
